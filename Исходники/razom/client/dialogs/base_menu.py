from typing import Dict

from admin.models import Config
from aiogram import types
from aiogram.types import CallbackQuery
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import (Back, Button, Checkbox, Column,
                                        ListGroup, ManagedCheckboxAdapter,
                                        Radio, Row, SwitchTo, Url)
from aiogram_dialog.widgets.text import Const, Format
from client.models import Client
from client.states import BaseClientCabinetState
from config import CHAT_ID, GROUP_URL, GROUP_URL_SIMPLE, USERNAME, bot
from loguru import logger

from .items import (catalog, our_group, precess_photo, present,
                    process_edit_user_info, render_catalog, render_present)

TERMS = "<b>‚úîÔ∏è –£—Å–ª–æ–≤–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞:</b>\n–ü—Ä–∏–æ–±—Ä–µ—Ç–∞—è –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã, –≤—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ <b>–¶–ï–ù–ù–û–ì–û –ü–†–ò–ó–ê - ü§ó </b>\n"\
    "–í—ã–ø–æ–ª–Ω–∏–≤ —É—Å–ª–æ–≤–∏—è, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–≤–æ–π –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ."\
    "–ê —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑." \
    "–ñ–µ–ª–∞–µ–º –≤–∞–º —É–¥–∞—á–∏!"


async def base_menu_getter(dialog_manager: DialogManager, **kwargs):
    dialog_data = dialog_manager.current_context().dialog_data
    additional_info = "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –æ—Ç–∑—ã–≤–∞ —á–µ—Ä–µ–∑ —Ä–µ–∑–¥–µ–ª '–†–æ–∑—ã–≥—Ä—ã—à'"
    user_info = await Client.get(telegram_id=dialog_manager.event.from_user.id)
    await Client.filter(telegram_id=dialog_manager.event.from_user.id).update(is_participating=True)
    try:
        is_ = await bot.get_chat_member(chat_id=CHAT_ID, user_id=dialog_manager.event.from_user.id)
        if is_['status'] == 'left':
            additional_info = "‚ùï –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã–º –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @razomshop –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            await Client.filter(telegram_id=dialog_manager.event.from_user.id).update(is_participating=False)
    except Exception as e:
        await Client.filter(telegram_id=dialog_manager.event.from_user.id).update(is_participating=False)
        additional_info = f"‚ùï –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã–º –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É {GROUP_URL_SIMPLE} –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"

    user_info = await Client.get(telegram_id=dialog_manager.event.from_user.id)
    additional_info = "‚ùï"
    if user_info.is_participating and user_info.moderation_accept:
        user_info.generate_personal_number()
        await user_info.save()
        logger.debug(user_info.personal_number)
        additional_info = "<b>‚úÖ –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ üëç</b>"

    else:
        user_info = await Client.get(telegram_id=dialog_manager.event.from_user.id)
        if not user_info.is_participating:
            additional_info += "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @razomshop\n"
        if not user_info.moderation_accept:
            additional_info += "–í–∞—à–µ —Ñ–æ—Ç–æ –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–æ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏–ª–∏ –í—ã –µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏"

    config_data = await Config.get(id=1)

    return {
        "name": "alex",
        "personal_number": str(user_info.personal_number).replace("None", "-"),
        "terms": config_data.terms,
        "in_group": additional_info
    }


async def on_menu_element_click(query: CallbackQuery, button: Button, manager: DialogManager):

    if button.widget_id == "catal":
        catalog = await render_catalog()
        await manager.done()
        await query.message.reply("–ù–∞—à –∫–∞—Ç–∞–ª–æ–≥", reply_markup=catalog)
    elif button.widget_id == "prese":
        present = await render_present()
        await manager.done()
        await query.message.reply("–ü–æ–¥–∞—Ä–∫–∏ –¥–ª—è –í–∞—Å", reply_markup=present)


ShowSearchMenu = Dialog(
    Window(
        Format("<b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å {name} </b>"),
        Format("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {personal_number}"),
        Format("{in_group}"),
        Const("–í—ã–±–∏—Ä–µ—Ç–µ —Ä–∞–∑–¥–µ–ª:"),
        Column(




            Button(Const('üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ üéÅ'),
                   on_click=on_menu_element_click, id='prese'),

            SwitchTo(Const("üíé –†–æ–∑—ã–≥—Ä—ã—à üíé"), id="lotto",
                     state=BaseClientCabinetState.lotto_state),
        ),
        Row(
            Button(Const('üîñ –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥ üîñ'),
                   on_click=on_menu_element_click, id='catal'),



            Url(
                Const("üß∑ –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ üß∑"),
                Const(f'{GROUP_URL}'),
            )
        ),
        Url(
            Const("–ï—Å—Ç—å –≤–æ—Ä–æ—Å ‚ùì"),
            Const(f'https://t.me/{USERNAME}'),
        ),




        state=BaseClientCabinetState.base_state,
        getter=base_menu_getter,
    ),

    Window(

        Const("\n<b>–ü–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</b>"),



        Url(
            Const("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏"),
            Const('https://t.me/+phQslHnJ0WA0NTMy'),
        ),

        SwitchTo(Const("‚Ü©Ô∏è –í –º–µ–Ω—é"), id="to_menu",
                 state=BaseClientCabinetState.base_state),
        state=BaseClientCabinetState.presents_state,
        getter=base_menu_getter,
    ),

    Window(

        Format("{terms}"),
        Column(


            SwitchTo(Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ"), id="to_menu",
                     state=BaseClientCabinetState.photo_state),
        ),
        SwitchTo(Const("‚Ü©Ô∏è –í –º–µ–Ω—é"), id="m",
                 state=BaseClientCabinetState.base_state),


        state=BaseClientCabinetState.lotto_state,
        getter=base_menu_getter,
    ),

    Window(

        Const("<b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @razomshop\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –Ω–∞ —Å–∞–π—Ç–µ wildberries</b>"),
        MessageInput(precess_photo,
                     content_types=types.ContentTypes.PHOTO),


        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="to_",
                 state=BaseClientCabinetState.lotto_state),
        state=BaseClientCabinetState.photo_state,
        getter=base_menu_getter,
    ),


    Window(

        Const("<b>–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å –º–∞–≥–∞–∑–∏–Ω:</b>"),
        catalog,
        SwitchTo(Const("‚Ü©Ô∏è –í –º–µ–Ω—é"), id="to_menu",
                 state=BaseClientCabinetState.base_state),


        state=BaseClientCabinetState.catalog_state,
        getter=base_menu_getter,
    ),

    Window(

        Const("<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –≤—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è (–Ω–µ –±–æ–ª—å—à–µ 1024 —Å–∏–º–≤–æ–ª–æ–≤)</b>"),
        MessageInput(process_edit_user_info),
        SwitchTo(Const("‚Ü©Ô∏è –í –º–µ–Ω—é"), id="to_menu",
                 state=BaseClientCabinetState.base_state),
        state=BaseClientCabinetState.question_state,
        getter=base_menu_getter,
    ),
    Window(
        Format("{terms}"),

        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="to_menu",
                 state=BaseClientCabinetState.lotto_state),
        state=BaseClientCabinetState.terms_state,
        getter=base_menu_getter,
    ),
)
